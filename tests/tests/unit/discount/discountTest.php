<?php
namespace mod_discount;

require_once realpath(dirname(__FILE__) . '/../../..') . '/enviroment.php';

doLogin();

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-07-02 at 11:18:02.
 */
class discountTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var discount
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new discount;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers mod_discount\discount::init
     */
    public function testInit()
    {
        $this->assertTrue(true);
    }

    /**
     * @covers mod_discount\discount::get_result_discount
     */
    public function testGet_result_discount()
    {
        $disc = $this->object->init()->get_result_discount(1);
        $this->assertInternalType('array', $disc);
        $this->assertEquals(7, count($disc));
        $this->assertArrayHasKey('all_active_discount', $disc);
        $this->assertArrayHasKey('all_max_type_discount', $disc);
        $this->assertArrayHasKey('max_discount', $disc);
        $this->assertArrayHasKey('sum_discount_product', $disc);
        $this->assertArrayHasKey('sum_discount_no_product', $disc);
        $this->assertArrayHasKey('result_sum_discount', $disc);
        $this->assertArrayHasKey('result_sum_discount_convert', $disc);
        $this->assertInternalType('array', $disc['max_discount']);
        
        
        $this->assertEquals('user', $disc['max_discount']['type_discount']);
        $this->assertEquals('zda7676r7q41u8gf', $disc['max_discount']['key']);
        
        
        $this->assertEquals('4125', $disc['sum_discount_product']);
        $this->assertEquals('6270', $disc['sum_discount_no_product']);
        $this->assertEquals('6270', $disc['result_sum_discount']);
        $this->assertEquals('6270', $disc['result_sum_discount_convert']);

    }

    /**
     * @covers mod_discount\discount::get_user_discount
     */
    public function testGet_user_discount()
    {
        
        $disc = $this->object->init()->get_user_discount();
        $uid = $this->object->init()->get_user_id();
        $this->assertEquals(50, $uid);
        $this->assertInternalType('array', $disc);
        $this->assertEquals(14, count($disc));
        $this->assertArrayHasKey('type_discount', $disc);
        $this->assertArrayHasKey('value', $disc);
        $this->assertEquals('user', $disc['type_discount']);
        $this->assertEquals(60, $disc['value']);
    }

    /**
     * @covers mod_discount\discount::get_user_group_discount
     */
    public function testGet_user_group_discount()
    {
        $disc = $this->object->init()->get_user_group_discount();
        $uid = $this->object->init()->get_user_group_id();
        $this->assertEquals(1, $uid);
        $this->assertInternalType('array', $disc);
        $this->assertEquals(14, count($disc));
        $this->assertArrayHasKey('type_discount', $disc);
        $this->assertArrayHasKey('value', $disc);
        $this->assertEquals('group_user', $disc['type_discount']);
        $this->assertEquals(15, $disc['value']);
    }

    /**
     * @covers mod_discount\discount::get_comulativ_discount
     */
    public function testGet_comulativ_discount()
    {
        $disc = $this->object->init()->get_comulativ_discount();
        $this->assertInternalType('array', $disc);
        $this->assertEquals(15, count($disc));
        $this->assertArrayHasKey('type_discount', $disc);
        $this->assertArrayHasKey('value', $disc);
        $this->assertEquals('comulativ', $disc['type_discount']);
        $this->assertEquals(44, $disc['value']);
    }

    /**
     * @covers mod_discount\discount::get_discount_products
     */
    public function testGet_discount_products()
    {
        $disc = $this->object->init()->get_discount_products();
        $this->assertEquals(4125, $disc);
    }

    /**
     * @covers mod_discount\discount::get_all_order_discount_register
     */
    public function testGet_all_order_discount_register()
    {
        $disc = $this->object->init()->get_all_order_discount_register();
        $this->assertInternalType('array', $disc);
        $this->assertEquals(16, count($disc));
        $this->assertArrayHasKey('type_discount', $disc);
        $this->assertArrayHasKey('value', $disc);
        $this->assertEquals('all_order', $disc['type_discount']);
        $this->assertEquals(33, $disc['value']);
    }

    /**
     * @covers mod_discount\discount::get_all_order_discount_not_register
     */
    public function testGet_all_order_discount_not_register()
    {
        $disc = $this->object->init()->get_all_order_discount_not_register();
        $this->assertEquals(null, $this->object->init()->discount_type['all_order'][0]['for_autorized']);
        $this->assertInternalType('array', $disc);
        $this->assertEquals(16, count($disc));
        $this->assertArrayHasKey('type_discount', $disc);
        $this->assertArrayHasKey('value', $disc);
        $this->assertEquals('all_order', $disc['type_discount']);
        $this->assertEquals(33, $disc['value']);
    }
}
