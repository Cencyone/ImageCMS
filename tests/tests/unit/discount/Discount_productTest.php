<?php

namespace mod_discount;

require_once realpath(dirname(__FILE__) . '/../../..') . '/enviroment.php';

doLogin();

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-07-03 at 11:39:27.
 */
class Discount_productTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Discount_product
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new discount_product;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers mod_discount\Discount_product::get_product_discount_event
     */
    public function testGet_product_discount_event() {
        $product = array(
            'id' => 191,
            'vid'=> 219
        );
        
        $this->object->get_product_discount_event($product);
        $disc = \CMSFactory\assetManager::create()->discount;
        
        $this->assertInternalType('array', $disc);
        
        
        $this->assertArrayHasKey('discoun_all_product', $disc);
        $this->assertArrayHasKey('discount_max', $disc);
        $this->assertArrayHasKey('discount_value', $disc);
        $this->assertArrayHasKey('price', $disc);

        
        
        $this->assertEquals('8250', $disc['price']);
        $this->assertEquals('7ns6g4r15w4t94jz', $disc['discount_max']['key']);
        $this->assertEquals('6600', $disc['discount_value']);

        

    }

    /**
     * @covers mod_discount\Discount_product::get_discount_one_product
     */
    public function testGet_discount_one_product() {
        
        $product = array(
            'product_id' => 191,
            'brand_id' => 26,
            'category_id' => 75
        );
        
        $disc = $this->object->get_discount_one_product($product);
        
        $this->assertInternalType('array', $disc);
        $this->assertArrayHasKey('type_discount', $disc[0]);
        $this->assertEquals(2, count($disc));
        
        
    }

}
